Write-Host "=== TESTING EXPIRED SHOWTIME FILTERING ==="

Write-Host "1. Starting backend..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"cd .. ; mvn spring-boot:run`"" -NoNewWindow
Write-Host "Waiting for backend to start..."
Start-Sleep -Seconds 30

Write-Host "2. Starting frontend..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"npm run dev`"" -WorkingDirectory "frontend" -NoNewWindow
Write-Host "Waiting for frontend to start..."
Start-Sleep -Seconds 15

Write-Host "=== APPLICATION STARTED ==="
Write-Host "Backend: http://localhost:8080"
Write-Host "Frontend: http://localhost:5174"

Write-Host ""
Write-Host "=== EXPIRED SHOWTIME FILTERING FEATURE ==="
Write-Host "This feature automatically filters out expired showtimes from API responses:"
Write-Host "1. Backend checks showtime.endTime < now"
Write-Host "2. Only returns showtimes with endTime > now"
Write-Host "3. Frontend will not see expired showtimes"
Write-Host ""
Write-Host "=== AFFECTED API ENDPOINTS ==="
Write-Host "1. GET /api/movie/{movieId}/showtimes"
Write-Host "2. GET /api/showtime/movie/{movieId}"
Write-Host "3. GET /api/showtime/room/{roomId}"
Write-Host "4. GET /api/showtime/cinema/{cinemaId}"
Write-Host "5. GET /api/showtime/movie/{movieId}/room/{roomId}"
Write-Host ""
Write-Host "=== EXPECTED BEHAVIOR ==="
Write-Host "Before filtering:"
Write-Host "- API returns all showtimes (including expired ones)"
Write-Host "- Frontend shows expired showtimes"
Write-Host "- Users can see past showtimes"
Write-Host ""
Write-Host "After filtering:"
Write-Host "- API only returns active showtimes (endTime > now)"
Write-Host "- Frontend only shows future showtimes"
Write-Host "- Users cannot see expired showtimes"
Write-Host ""
Write-Host "=== TESTING STEPS ==="
Write-Host "1. Create a movie with showtimes"
Write-Host "2. Set some showtimes with endTime in the past"
Write-Host "3. Set some showtimes with endTime in the future"
Write-Host "4. Call showtime APIs"
Write-Host "5. Verify only future showtimes are returned"
Write-Host ""
Write-Host "=== CURL COMMANDS ==="
Write-Host "curl http://localhost:8080/api/movie/1/showtimes"
Write-Host "curl http://localhost:8080/api/showtime/movie/1"
Write-Host "curl http://localhost:8080/api/showtime/room/1"
Write-Host "curl http://localhost:8080/api/showtime/cinema/1"
Write-Host ""
Write-Host "=== EXPECTED API RESPONSE ==="
Write-Host "{"
Write-Host "  `"status`": `"200`","
Write-Host "  `"message`": `"Showtimes retrieved successfully!`","
Write-Host "  `"data`": ["
Write-Host "    {"
Write-Host "      `"id`": 123,"
Write-Host "      `"startTime`": `"2025-09-24T18:00:00`","
Write-Host "      `"endTime`": `"2025-09-24T20:00:00`","
Write-Host "      `"movie`": { `"title`": `"Future Movie`" },"
Write-Host "      `"room`": { `"name`": `"Room 1`" }"
Write-Host "    }"
Write-Host "    // Only showtimes with endTime > now"
Write-Host "  ]"
Write-Host "}"
Write-Host ""
Write-Host "=== FRONTEND IMPACT ==="
Write-Host "Frontend will automatically:"
Write-Host "- Not display expired showtimes"
Write-Host "- Only show available booking times"
Write-Host "- Improve user experience"
Write-Host "- Prevent confusion about past showtimes"
Write-Host ""
Write-Host "Press any key to exit..."
$host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") | Out-Null

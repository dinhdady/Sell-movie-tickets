//package com.project.cinema.movie.Controllers;
//
//import com.project.cinema.movie.DTO.QRCodeResponse;
//import com.project.cinema.movie.Models.*;
//import com.project.cinema.movie.Services.QRCodeService;
//import com.project.cinema.movie.Services.TicketService;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.ResponseEntity;
//import org.springframework.security.access.prepost.PreAuthorize;
//import org.springframework.web.bind.annotation.*;
//import org.springframework.web.multipart.MultipartFile;
//
//import java.util.Date;
//import java.util.Optional;
//
//@RestController
//@RequestMapping("/api/scan-qr")
//public class QRCodeScanController {
//
//    @Autowired
//    private TicketService ticketService;
//
//    @Autowired
//    private QRCodeService qrCodeDecoderService;
//
//    private static final Logger logger = LoggerFactory.getLogger(QRCodeScanController.class);
//    @PreAuthorize("hasRole('STAFF')")
//    @PostMapping
//    public ResponseEntity<?> scanAndCheckQRCode(@RequestParam("file") MultipartFile file) {
//        try {
//            // üîπ B∆∞·ªõc 1: Gi·∫£i m√£ m√£ QR ƒë·ªÉ l·∫•y token
//            String token = qrCodeDecoderService.decodeQRCode(file);
//
//            Optional<Ticket> ticketOptional = ticketService.findByToken(token);
//            logger.info("Ticket found: " + ticketOptional.orElse(null));
//
//            if (ticketOptional.isEmpty()) {
//                return ResponseEntity.badRequest().body(new QRCodeResponse(
//                        false,
//                        "M√£ QR kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng.",
//                        null, null, null, null, null
//                ));
//            }
//
//            Ticket ticket = ticketOptional.get();
//
//            // üîπ B∆∞·ªõc 2: Ki·ªÉm tra xem v√© ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng ch∆∞a
//            if (ticket.isUsed()) {
//                return ResponseEntity.badRequest().body(new QRCodeResponse(
//                        false,
//                        "M√£ QR ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng tr∆∞·ªõc ƒë√≥.",
//                        ticket.getId(),
//                        ticket.getOrder().getUser().getUsername(),
//                        null, null,
//                        ticket.getStatus().name()
//                ));
//            }
//
//            // üîπ B∆∞·ªõc 3: L·∫•y th√¥ng tin ƒë∆°n h√†ng (Order)
//            Order order = ticket.getOrder();
//            if (order == null || order.getUser() == null) {
//                return ResponseEntity.badRequest().body(new QRCodeResponse(
//                        false,
//                        "L·ªói: Kh√¥ng t√¨m th·∫•y ƒë∆°n ƒë·∫∑t h√†ng ho·∫∑c ng∆∞·ªùi d√πng.",
//                        null, null, null, null, null
//                ));
//            }
//
//            // üîπ B∆∞·ªõc 4: L·∫•y su·∫•t chi·∫øu t·ª´ `Booking`
//            Showtime showtime = null;
//            for (Booking booking : order.getBookings()) {
//                if (booking.getShowtime() != null) {
//                    showtime = booking.getShowtime();
//                    break;
//                }
//            }
//
//            if (showtime == null || showtime.getMovie() == null) {
//                return ResponseEntity.badRequest().body(new QRCodeResponse(
//                        false,
//                        "L·ªói: Kh√¥ng t√¨m th·∫•y su·∫•t chi·∫øu ho·∫∑c phim.",
//                        null, null, null, null, null
//                ));
//            }
//
//            // üîπ B∆∞·ªõc 5: Ki·ªÉm tra v√© c√≥ h·ª£p l·ªá kh√¥ng
//            if (!isBookingValid(ticket)) {
//                return ResponseEntity.badRequest().body(new QRCodeResponse(
//                        false,
//                        "M√£ QR kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n.",
//                        null, null, null, null, null
//                ));
//            }
//
//            // üîπ B∆∞·ªõc 6: C·∫≠p nh·∫≠t tr·∫°ng th√°i v√©
//            ticket.setUpdatedAt(new Date());
//            ticket.setUsed(true);
//            ticket.setStatus(TicketStatus.USED); // ƒê·∫∑t tr·∫°ng th√°i l√† USED khi qu√©t m√£ QR th√†nh c√¥ng
//            ticketService.updateTicket(ticket.getId(), ticket);
//
//            // üîπ B∆∞·ªõc 7: Tr·∫£ v·ªÅ th√¥ng tin x√°c nh·∫≠n
//            return ResponseEntity.ok().body(new QRCodeResponse(
//                    true,
//                    "M√£ QR h·ª£p l·ªá. ƒê·∫∑t v√© ƒë∆∞·ª£c x√°c nh·∫≠n.",
//                    ticket.getId(),
//                    order.getUser().getUsername(),
//                    showtime.getMovie().getTitle(),
//                    showtime.getStartTime(),
//                    ticket.getStatus().name()
//            ));
//
//        } catch (Exception e) {
//            logger.error("L·ªói khi qu√©t ho·∫∑c ki·ªÉm tra m√£ QR", e);
//            return ResponseEntity.internalServerError().body(new QRCodeResponse(
//                    false,
//                    "L·ªói khi qu√©t ho·∫∑c ki·ªÉm tra m√£ QR: " + e.getMessage(),
//                    null, null, null, null, null
//            ));
//        }
//    }
//
//
//
//    private boolean isBookingValid(Ticket ticket) {
//        // Ki·ªÉm tra c√°c ƒëi·ªÅu ki·ªán h·ª£p l·ªá c·ªßa ƒë·∫∑t v√©
//        // V√≠ d·ª•: Tr·∫°ng th√°i ƒë·∫∑t v√© ph·∫£i l√† CONFIRMED v√† th·ªùi gian hi·ªáu l·ª±c ch∆∞a h·∫øt
//        return ticket.getStatus() == TicketStatus.USED;
//    }
//}
Write-Host "=== TESTING REAL-TIME SEAT CHECKING ==="

Write-Host "1. Starting backend..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"cd .. ; .\mvnw.cmd spring-boot:run`"" -NoNewWindow
Write-Host "Waiting for backend to start..."
Start-Sleep -Seconds 30

Write-Host "2. Starting frontend..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"npm run dev`"" -WorkingDirectory "frontend" -NoNewWindow
Write-Host "Waiting for frontend to start..."
Start-Sleep -Seconds 15

Write-Host "=== APPLICATION STARTED ==="
Write-Host "Backend: http://localhost:8080"
Write-Host "Frontend: http://localhost:5174"

Write-Host ""
Write-Host "=== REAL-TIME SEAT CHECKING FEATURE ==="
Write-Host "This feature checks seat status in real-time when user clicks on a seat:"
Write-Host "1. User clicks on a seat"
Write-Host "2. Frontend calls API: POST /api/booking/{showtimeId}/check-seat/{seatNumber}"
Write-Host "3. Backend checks if showtime.endTime < now"
Write-Host "4. If expired: returns status = 'AVAILABLE'"
Write-Host "5. If not expired: returns actual seat status"
Write-Host ""
Write-Host "=== NEW API ENDPOINT ==="
Write-Host "POST /api/booking/{showtimeId}/check-seat/{seatNumber}"
Write-Host ""
Write-Host "=== EXPECTED API RESPONSE FOR EXPIRED SHOWTIME ==="
Write-Host "{"
Write-Host "  `"status`": `"200`","
Write-Host "  `"message`": `"Seat status checked successfully!`","
Write-Host "  `"data`": {"
Write-Host "    `"showtimeId`": 123,"
Write-Host "    `"seatNumber`": `"A1`","
Write-Host "    `"movieTitle`": `"Movie Name`","
Write-Host "    `"startTime`": `"2025-09-23T18:00:00`","
Write-Host "    `"endTime`": `"2025-09-23T20:00:00`","
Write-Host "    `"isExpired`": true,"
Write-Host "    `"currentTime`": `"2025-09-23T22:30:00`","
Write-Host "    `"status`": `"AVAILABLE`","
Write-Host "    `"message`": `"Showtime has ended, seat is available`""
Write-Host "  }"
Write-Host "}"
Write-Host ""
Write-Host "=== EXPECTED API RESPONSE FOR ACTIVE SHOWTIME ==="
Write-Host "{"
Write-Host "  `"data`": {"
Write-Host "    `"isExpired`": false,"
Write-Host "    `"status`": `"AVAILABLE`" hoặc `"BOOKED`","
Write-Host "    `"message`": `"Seat is available for booking`" hoặc `"Seat is already booked`""
Write-Host "  }"
Write-Host "}"
Write-Host ""
Write-Host "=== TESTING STEPS ==="
Write-Host "1. Find a showtime with endTime in the past"
Write-Host "2. Click on any seat for that showtime"
Write-Host "3. Verify API returns isExpired = true and status = 'AVAILABLE'"
Write-Host "4. Find a showtime with endTime in the future"
Write-Host "5. Click on seats for that showtime"
Write-Host "6. Verify API returns isExpired = false and actual seat status"
Write-Host ""
Write-Host "=== CURL COMMANDS ==="
Write-Host "curl -X POST http://localhost:8080/api/booking/123/check-seat/A1"
Write-Host "curl -X POST http://localhost:8080/api/booking/123/check-seat/B2"
Write-Host "curl -X POST http://localhost:8080/api/booking/456/check-seat/C3"
Write-Host ""
Write-Host "=== FRONTEND INTEGRATION ==="
Write-Host "Frontend should call bookingAPI.checkSeatStatus(showtimeId, seatNumber)"
Write-Host "on each seat click to get real-time status."
Write-Host ""
Write-Host "Press any key to exit..."
$host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") | Out-Null

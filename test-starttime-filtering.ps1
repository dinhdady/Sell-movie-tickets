Write-Host "=== TESTING STARTTIME FILTERING ==="

Write-Host "1. Starting backend with startTime filtering..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"cd .. ; mvn spring-boot:run`"" -NoNewWindow
Write-Host "Waiting for backend to start..."
Start-Sleep -Seconds 30

Write-Host "2. Starting frontend..."
Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -Command `"npm run dev`"" -WorkingDirectory "frontend" -NoNewWindow
Write-Host "Waiting for frontend to start..."
Start-Sleep -Seconds 15

Write-Host "=== APPLICATION STARTED ==="
Write-Host "Backend: http://localhost:8080"
Write-Host "Frontend: http://localhost:5174"

Write-Host ""
Write-Host "=== STARTTIME FILTERING FEATURE ==="
Write-Host "This feature filters showtimes based on startTime >= now:"
Write-Host "1. Only showtimes with startTime >= current time"
Write-Host "2. Excludes showtimes that have already started"
Write-Host "3. More accurate than endTime filtering"
Write-Host ""
Write-Host "=== TESTING API ENDPOINTS ==="
Write-Host "1. Debug endpoint (all showtimes):"
Write-Host "   curl http://localhost:8080/api/showtime/debug/all"
Write-Host ""
Write-Host "2. Filtered movie showtimes:"
Write-Host "   curl http://localhost:8080/api/movie/1/showtimes"
Write-Host ""
Write-Host "3. Filtered showtime by movie:"
Write-Host "   curl http://localhost:8080/api/showtime/movie/1"
Write-Host ""
Write-Host "=== EXPECTED DEBUG OUTPUT ==="
Write-Host "Debug endpoint should show:"
Write-Host "- currentTime: [server time]"
Write-Host "- showtimes with isExpired based on startTime"
Write-Host "- startTimeDiff: milliseconds from now"
Write-Host "- endTimeDiff: milliseconds from now"
Write-Host ""
Write-Host "=== EXPECTED FILTERING LOGIC ==="
Write-Host "Before filtering:"
Write-Host "- Showtime 1: startTime=2025-09-22T18:00, isExpired=true"
Write-Host "- Showtime 2: startTime=2025-09-24T18:00, isExpired=false"
Write-Host ""
Write-Host "After filtering:"
Write-Host "- Only Showtime 2 returned (startTime >= now)"
Write-Host ""
Write-Host "=== BACKEND LOGGING ==="
Write-Host "Look for logs like:"
Write-Host "[ShowtimeService] Showtime ID: X, StartTime: [time], EndTime: [time], TimeDiff: [ms], IsActive: true/false"
Write-Host ""
Write-Host "=== TESTING STEPS ==="
Write-Host "1. Check debug endpoint to see all showtimes"
Write-Host "2. Verify isExpired is based on startTime"
Write-Host "3. Test filtered endpoints"
Write-Host "4. Confirm only future showtimes are returned"
Write-Host "5. Check frontend no longer shows past showtimes"
Write-Host ""
Write-Host "Press any key to exit..."
$host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") | Out-Null

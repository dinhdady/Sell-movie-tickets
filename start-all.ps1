# Script ch·∫°y c·∫£ backend v√† frontend
Write-Host "üöÄ Starting Cinema Movie Booking System (Full Stack)..." -ForegroundColor Green

# Ki·ªÉm tra c√°c dependencies
Write-Host "üîç Checking dependencies..." -ForegroundColor Blue

# Ki·ªÉm tra Java
try {
    $javaVersion = java -version 2>&1
    Write-Host "‚úÖ Java found" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Java not found. Please install Java 17 or higher." -ForegroundColor Red
    exit 1
}

# Ki·ªÉm tra Maven
try {
    $mavenVersion = mvn -version 2>&1
    Write-Host "‚úÖ Maven found" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Maven not found. Please install Maven." -ForegroundColor Red
    Write-Host "Run: .\install-maven.ps1" -ForegroundColor Yellow
    exit 1
}

# Ki·ªÉm tra Node.js
try {
    $nodeVersion = node --version 2>&1
    Write-Host "‚úÖ Node.js found" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js not found. Please install Node.js 18 or higher." -ForegroundColor Red
    exit 1
}

# Ki·ªÉm tra MySQL
Write-Host "üîç Checking MySQL..." -ForegroundColor Blue
try {
    $mysqlTest = mysql -u root -p123456789 -e "SELECT 1;" 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ MySQL connection successful" -ForegroundColor Green
    } else {
        Write-Host "‚ùå MySQL connection failed. Please check your database." -ForegroundColor Red
        Write-Host "Make sure MySQL is running and credentials are correct." -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è  MySQL not found in PATH. Please ensure MySQL is running." -ForegroundColor Yellow
}

# Build backend
Write-Host "üî® Building backend..." -ForegroundColor Blue
mvn clean package -DskipTests

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Backend build successful!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend build failed!" -ForegroundColor Red
    exit 1
}

# Build frontend
Write-Host "üé® Building frontend..." -ForegroundColor Blue
Set-Location frontend

if (-not (Test-Path "node_modules")) {
    Write-Host "üì¶ Installing frontend dependencies..." -ForegroundColor Blue
    npm install
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Failed to install frontend dependencies!" -ForegroundColor Red
        exit 1
    }
}

npm run build

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Frontend build successful!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend build failed!" -ForegroundColor Red
    exit 1
}

# Copy frontend build to backend
Write-Host "üìã Copying frontend to backend..." -ForegroundColor Blue
Copy-Item -Path "dist/*" -Destination "../src/main/resources/static/" -Recurse -Force

# Rebuild backend with frontend
Write-Host "üîÑ Rebuilding backend with frontend..." -ForegroundColor Blue
Set-Location ..
mvn package -DskipTests

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Final build successful!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Final build failed!" -ForegroundColor Red
    exit 1
}

# Ch·∫°y ·ª©ng d·ª•ng
Write-Host "üöÄ Starting application..." -ForegroundColor Blue
Write-Host "Application will run on: http://localhost:8080" -ForegroundColor Cyan
Write-Host "Press Ctrl+C to stop the application" -ForegroundColor Yellow

java -jar target/movie-0.0.1-SNAPSHOT.jar
